# خريطة أرقام الخدمات لدى المزوّد
SERVICE_MAP = {
    "متابعين تيكتوك": 16256,
    "متابعين انستغرام": 16267,
    "لايكات تيكتوك": 12320,
    "لايكات انستغرام": 1066500,
    "مشاهدات تيكتوك": 9448,
    "مشاهدات انستغرام": 64686464,
    "مشاهدات بث تيكتوك": 14442,
    "مشاهدات بث انستا": 646464,
    "رفع سكور البث": 14662,
    "اعضاء قنوات تلي": 955656,
    "اعضاء كروبات تلي": 644656,
}

# حدود الكمية والسعر لكل 1000
PRICING = {
    "متابعين تيكتوك":       {"min": 100, "max": 1000000, "pricePerK": 3.5, "cat": "المتابعين"},
    "متابعين انستغرام":     {"min": 100, "max": 1000000, "pricePerK": 3.0, "cat": "المتابعين"},
    "لايكات تيكتوك":        {"min": 100, "max": 1000000, "pricePerK": 1.0, "cat": "الايكات"},
    "لايكات انستغرام":      {"min": 100, "max": 1000000, "pricePerK": 1.0, "cat": "الايكات"},
    "مشاهدات تيكتوك":       {"min": 100, "max": 1000000, "pricePerK": 0.1, "cat": "المشاهدات"},
    "مشاهدات انستغرام":     {"min": 100, "max": 1000000, "pricePerK": 0.1, "cat": "المشاهدات"},
    "مشاهدات بث تيكتوك":    {"min": 100, "max": 1000000, "pricePerK": 2.0, "cat": "مشاهدات البث المباشر"},
    "مشاهدات بث انستا":     {"min": 100, "max": 1000000, "pricePerK": 2.0, "cat": "مشاهدات البث المباشر"},
    "رفع سكور البث":        {"min": 100, "max": 1000000, "pricePerK": 2.0, "cat": "رفع سكور تيكتوك"},
    "اعضاء قنوات تلي":      {"min": 100, "max": 1000000, "pricePerK": 3.0, "cat": "خدمات التليجرام"},
    "اعضاء كروبات تلي":     {"min": 100, "max": 1000000, "pricePerK": 3.0, "cat": "خدمات التليجرام"},
}

def calc_price(service_key: str, quantity: int) -> float:
    item = PRICING.get(service_key)
    if not item:
        raise ValueError("Unknown service_key")
    raw = (quantity / 1000.0) * float(item["pricePerK"])
    return round((int(raw * 100 + 0.9999)) / 100, 2)  # تقريب لأعلى سنت
